/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LAT 0
#define RUS 1
#define SYM 2
#define NUM 3
#define ADJ 4

#define LATON  &kp CAPS
#define RUSON  &kp LS(CAPS)

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        macros {
                lat: lat {
                        label = "lat";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press LATON>
                                , <&to LAT>
                                , <&macro_release LATON>
                                ;
                };
                rus: rus {
                        label = "rus";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press RUSON>
                                , <&to RUS>
                                , <&macro_release RUSON>
                                ;
                };
                // tap in lat
                til: til {
                        label = "til";
                        compatible = "zmk,behavior-macro-one-param";
                        #binding-cells = <1>;
                        bindings
                                = <&macro_tap LATON>
                                , <&macro_param_1to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_1to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_tap RUSON>
                                ;
                };
                // &mo in rus
                rmo: rmo {
                        label = "rmo";
                        compatible = "zmk,behavior-macro-one-param";
                        #binding-cells = <1>;
                        bindings
                                = <&macro_tap LATON>
                                , <&macro_param_1to1>
                                , <&macro_press &mo MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_1to1>
                                , <&macro_release &mo MACRO_PLACEHOLDER>
                                , <&macro_tap RUSON>
                                ;
                };
        };
        combos {
                compatible = "zmk,combos";
                rus_yo {
                        timeout-ms = <50>;
                        layers = <RUS>;
                        key-positions = <17 18>;
                        bindings = <&kp GRAVE>;
                };
                rus_hard_sign {
                        timeout-ms = <50>;
                        layers = <RUS>;
                        key-positions = <45 46>;
                        bindings = <&kp RBKT>;
                };
                lat {
                        timeout-ms = <50>;
                        layers = <RUS>;
                        key-positions = <29 30>;
                        bindings = <&lat>;
                };
                rus {
                        timeout-ms = <50>;
                        layers = <LAT>;
                        key-positions = <33 34>;
                        bindings = <&rus>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                lat_layer {
                        bindings = <
            &kp TAB       &none  &kp ENTER &kp DOWN &kp UP &kp BSPC /**/ &kp HOME &kp LEFT &kp RIGHT &kp END &kp C_AC_COPY &kp C_AC_PASTE
   &lat     &none         &kp Q  &kp W     &kp E  &kp R    &kp T    /**/ &kp Y    &kp U    &kp I     &kp O   &kp P         &kp LBKT       &rus
            &kp MINUS     &kp A  &kp S     &kp D  &kp F    &kp G    /**/ &kp H    &kp J    &kp K     &kp L   &none         &kp APOS
            &kp QUESTION  &kp Z  &kp X     &kp C  &kp V    &kp B    /**/ &kp N    &kp M    &none     &none   &kp COMMA     &kp DOT

                                         &mo NUM &kp LALT &kp LCTRL /**/ &kp RGUI &mt RSHFT SPACE &mo SYM
                        >;
                };
                rus_layer {
                        bindings = <
            &trans        &kp GRAVE  &trans   &trans  &trans &trans    /**/ &trans   &trans   &trans     &trans   &trans        &trans
   &lat     &kp APOS      &trans     &trans   &trans  &trans &trans    /**/ &trans   &trans   &trans     &trans   &trans        &trans       &kp RBKT
            &trans        &trans     &trans   &trans  &trans &trans    /**/ &trans   &trans   &trans     &trans   &kp SEMI      &til APOS
            &til QUESTION &trans     &trans   &trans  &trans &trans    /**/ &trans   &trans   &kp COMMA  &kp DOT  &kp LS(SLASH) &kp SLASH

                                           &rmo NUM  &trans &trans    /**/ &trans &trans &rmo SYM
                        >;
                };
                symbol_layer {
                        bindings = <
           &kp ESC   &none     &kp INS   &kp PG_DN &kp PG_UP &kp DEL   /**/ &none     &none    &none     &none    &none    &none
   &kp ESC &none     &none     &kp TILDE &kp GRAVE &kp CARET &kp GRAVE /**/ &none     &kp LBKT &kp RBKT  &kp LT   &kp GT   &none &trans
           &kp UNDER &kp PRCNT &kp HASH  &kp AT    &kp AMPS  &kp DLLR  /**/ &kp COLON &kp LPAR &kp RPAR  &kp LBRC &kp RBRC &none
           &kp EXCL  &none     &none     &none     &kp PLUS  &kp EQUAL /**/ &kp SEMI  &none    &kp SLASH &kp PIPE &kp BSLH &none

                                        &trans    &trans    &kp RCTRL /**/ &trans &trans &trans
                        >;
                };

                number_layer {
                        bindings = < 
          &kp PSCRN &kp SLCK  &kp PAUSE_BREAK &kp F10 &kp F11 &kp F12 /**/ &none     &none  &kp KP_DIVIDE &kp STAR &none     &kp KP_NLCK
   &trans &kp CAPS  &none     &none           &kp F7  &kp F8  &kp F9  /**/ &none     &kp N7 &kp N8        &kp N9   &kp MINUS &none        &trans
          &none     &kp LSHFT &kp LCTRL       &kp F4  &kp F5  &kp F6  /**/ &kp ENTER &kp N4 &kp N5        &kp N6   &kp PLUS  &kp EQUAL
          &none     &none     &none           &kp F1  &kp F2  &kp F3  /**/ &none     &kp N1 &kp N2        &kp N3   &kp COMMA &kp DOT

                                                 &trans &trans &trans /**/ &trans &trans &kp N0
                        >;
                };
                adjust_layer {
                        bindings = <
          &none &none &none &none &none &none &none &none &none &none &none &none
   &none &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &none
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
